// Generated by https://quicktype.io

export interface SaveXML {
    "?xml": XML;
    Stats: Stats;
}

export interface XML {
    "@_version": string;
    "@_encoding": string;
}

export interface Stats {
    GeneralData: GeneralData;
    SongScores: SongScores;
    CourseScores: string;
    CategoryScores: string;
    ScreenshotData: string;
    CalorieData: CalorieData;
}

export interface CalorieData {
    CaloriesBurned: CaloriesBurned[];
}

export interface CaloriesBurned {
    "#text": number;
    "@_Date": string;
}

export interface GeneralData {
    DisplayName: string;
    CharacterID: string;
    LastUsedHighScoreName: string;
    WeightPounds: number;
    Voomax: number;
    BirthYear: number;
    IgnoreStepCountCalories: number;
    IsMale: number;
    IsMachine: number;
    Guid: GUID;
    SortOrder: string;
    LastDifficulty: Difficulty;
    LastCourseDifficulty: Difficulty;
    LastStepsType: StepsType;
    Song: GeneralDataSong;
    Course: Course;
    CurrentCombo: number;
    TotalSessions: number;
    TotalSessionSeconds: number;
    TotalGameplaySeconds: number;
    TotalCaloriesBurned: number;
    GoalType: number;
    GoalCalories: number;
    GoalSeconds: number;
    LastPlayedMachineGuid: MachineGUID;
    LastPlayedDate: string;
    TotalDancePoints: number;
    NumExtraStagesPassed: number;
    NumExtraStagesFailed: number;
    NumToasties: number;
    TotalTapsAndHolds: number;
    TotalJumps: number;
    TotalHolds: number;
    TotalRolls: number;
    TotalMines: number;
    TotalHands: number;
    TotalLifts: number;
    DefaultModifiers: DefaultModifiers;
    Unlocks: string;
    NumSongsPlayedByPlayMode: NumSedByPlayMode;
    NumSongsPlayedByStyle: NumSongsPlayedByStyle;
    NumSongsPlayedByDifficulty: NumSongsPlayedByDifficulty;
    NumSongsPlayedByMeter: { [key: string]: number };
    NumTotalSongsPlayed: number;
    NumStagesPassedByPlayMode: NumSedByPlayMode;
    NumStagesPassedByGrade: { [key: string]: number };
    UserTable: string;
}

export interface Course {
    "@_FullTitle": string;
}

export interface DefaultModifiers {
    dance: string;
}

export enum GUID {
    The07E3Fcdb2343997F = "07e3fcdb2343997f",
}

export enum Difficulty {
    Beginner = "Beginner",
    Challenge = "Challenge",
    Easy = "Easy",
    Edit = "Edit",
    Hard = "Hard",
    Medium = "Medium",
}

export enum MachineGUID {
    A734Ddafc2A955B9 = "a734ddafc2a955b9",
    Af51A1E5Ad23Affc = "af51a1e5ad23affc",
    B896B96B3Be9Dc5A = "b896b96b3be9dc5a",
}

export enum StepsType {
    DanceDouble = "dance-double",
    DanceSingle = "dance-single",
}

export interface NumSongsPlayedByDifficulty {
    Beginner: number;
    Easy: number;
    Medium: number;
    Hard: number;
    Challenge: number;
    Edit: number;
}

export interface NumSedByPlayMode {
    Regular: number;
}

export interface NumSongsPlayedByStyle {
    Style: Style | Style[];
}

export interface Style {
    "#text": number;
    "@_Game": string;
    "@_Style": string;
}

export interface GeneralDataSong {
    "@_Dir": string;
}

export interface SongScores {
    Song: Array<SongScoresSong | null>;
}

export interface SongScoresSong {
    Steps: Step[] | StepsClass;
    "@_Dir": string;
}

export interface Step {
    HighScoreList: HighScoreList;
    "@_Difficulty": Difficulty;
    "@_StepsType": StepsType;
}

export interface HighScoreList {
    NumTimesPlayed: number;
    LastPlayed: string;
    HighGrade?: Grade;
    HighScore?: HighScoreElement[] | HighScoreElement;
}

export enum Grade {
    Failed = "Failed",
    Tier01 = "Tier01",
    Tier02 = "Tier02",
    Tier03 = "Tier03",
    Tier04 = "Tier04",
    Tier05 = "Tier05",
    Tier06 = "Tier06",
    Tier07 = "Tier07",
    Tier08 = "Tier08",
    Tier09 = "Tier09",
    Tier10 = "Tier10",
    Tier11 = "Tier11",
    Tier12 = "Tier12",
    Tier13 = "Tier13",
    Tier14 = "Tier14",
    Tier15 = "Tier15",
    Tier16 = "Tier16",
    Tier17 = "Tier17",
}

export interface HighScoreElement {
    Name: string;
    Grade: Grade;
    Score: number;
    PercentDP: number;
    SurviveSeconds: number;
    MaxCombo: number;
    StageAward: StageAward;
    PeakComboAward: number | string;
    Modifiers: string;
    DateTime: string;
    PlayerGuid: GUID;
    MachineGuid: MachineGUID;
    ProductID: number;
    TapNoteScores: TapNoteScores;
    HoldNoteScores: HoldNoteScores;
    RadarValues: { [key: string]: number };
    LifeRemainingSeconds: number;
    Disqualified: number;
}

export interface HoldNoteScores {
    LetGo: number;
    Held: number;
    MissedHold: number;
}

export enum StageAward {
    Empty = "",
    FullComboW2 = "FullComboW2",
    FullComboW3 = "FullComboW3",
    OneW3 = "OneW3",
    SingleDigitW2 = "SingleDigitW2",
    SingleDigitW3 = "SingleDigitW3",
}

export interface TapNoteScores {
    HitMine: number;
    AvoidMine: number;
    CheckpointMiss: number;
    Miss: number;
    W5: number;
    W4: number;
    W3: number;
    W2: number;
    W1: number;
    CheckpointHit: number;
}

export interface StepsClass {
    HighScoreList: HighScoreList;
    "@_Difficulty": Difficulty;
    "@_StepsType": StepsType;
    "@_Description"?: string;
    "@_Hash"?: string;
}
